{"version":3,"sources":["Box.js","DisplayFB.js","App.js","reportWebVitals.js","index.js"],"names":["Box","box","show","className","DisplayFB","fb","change","fbState","htmlFor","name","type","value","onInput","App","useState","fizz","setFizz","buzz","setBuzz","setShow","boxes","setBoxes","isPlaying","setIsPlaying","fillBoxes","f","b","newBoxes","i","push","randomizeFB","fizzRand","Math","floor","random","buzzRand","useEffect","interval","setInterval","clearInterval","e","target","onClick","parseInt","map","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81840c8c.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Box({ box, show }) {\n  return <div className={`box ${box}`}>{show ? box : \"\"}</div>;\n}\n\nexport default Box;\n","import React from \"react\";\n\nfunction DisplayFB({ fb, change, fbState }) {\n  return (\n    <div className=\"center-col display\">\n      <label htmlFor={fb} className={`${fb} text`}>\n        {fb === \"F\" ? \"Fizz\" : \"Buzz\"}\n      </label>\n      <input\n        className={`${fb} text`}\n        name={fb}\n        type=\"number\"\n        value={fbState}\n        onInput={change}\n      />\n    </div>\n  );\n}\n\nexport default DisplayFB;\n","import React, { useState, useEffect } from \"react\";\nimport { FaPlus, FaMinus } from \"react-icons/fa\";\nimport \"./App.css\";\nimport Box from \"./Box\";\nimport DisplayFB from \"./DisplayFB\";\n\nfunction App() {\n  // Set a number for Fizz and Buzz. Boxes is our array containing current fizzbuzz values\n  const [fizz, setFizz] = useState(3);\n  const [buzz, setBuzz] = useState(5);\n  const [show, setShow] = useState(false);\n  const [boxes, setBoxes] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // Fill an Array with when to fizz,buzz and/or fizzbuzz\n  const fillBoxes = (f, b) => {\n    let newBoxes = [];\n    for (let i = 1; i <= 100; i++) {\n      if (i % f === 0 && i % b === 0) {\n        newBoxes.push(\"FB\");\n      } else if (i % f === 0) {\n        newBoxes.push(\"F\");\n      } else if (i % b === 0) {\n        newBoxes.push(\"B\");\n      } else {\n        newBoxes.push(i);\n      }\n    }\n    setBoxes(newBoxes);\n  };\n\n  const randomizeFB = () => {\n    let fizzRand = Math.floor(Math.random() * (100 - 2) + 2);\n    let buzzRand = Math.floor(Math.random() * (100 - 2) + 2);\n    fillBoxes(fizzRand, buzzRand);\n    setFizz(fizzRand);\n    setBuzz(buzzRand);\n  };\n\n  const fizzChange = (e) => {\n    fillBoxes(e.target.value, buzz);\n    setFizz(e.target.value);\n  };\n  const buzzChange = (e) => {\n    fillBoxes(fizz, e.target.value);\n    setBuzz(e.target.value);\n  };\n\n  useEffect(() => {\n    if (isPlaying) {\n      const interval = setInterval(() => randomizeFB(), 1000);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n    fillBoxes(fizz, buzz);\n  }, [isPlaying]);\n\n  return (\n    <main className=\"center-col\">\n      <header className=\"center-col\">\n        <h1 className=\"title\">\n          <span className=\"F text\">Fizz</span>\n          <span className=\"B text\">Buzz</span>\n          <span className=\"FB text\">Vizzualizer</span>\n        </h1>\n\n        <section className=\"settings\">\n          {/* FIZZ ZONE */}\n          <div className=\"center-col\">\n            <DisplayFB fb={\"F\"} fbState={fizz} change={fizzChange} />\n            {/* FIZZ CONTROLS */}\n            <div className=\"row\">\n              <button\n                className=\"btn plus-min\"\n                onClick={() => {\n                  fillBoxes(fizz - 1, buzz);\n                  setFizz(fizz - 1);\n                }}\n              >\n                <FaMinus />\n              </button>\n              <button\n                className=\"btn plus-min\"\n                onClick={() => {\n                  setFizz(parseInt(fizz) + 1);\n                  fillBoxes(fizz + 1, buzz);\n                }}\n              >\n                <FaPlus />\n              </button>\n            </div>\n          </div>\n\n          {/* BUTTON ZONE */}\n          <div className=\"btn-container\">\n            <button className=\"btn\" onClick={() => setShow(!show)}>\n              {show ? \"HIDE FB\" : \"SHOW FB\"}\n            </button>\n            <button className=\"btn\" onClick={randomizeFB}>\n              RANDOM\n            </button>\n            <button\n              className={`btn ${!isPlaying || \"autoplay\"}`}\n              onClick={() => setIsPlaying(!isPlaying)}\n            >\n              {isPlaying ? \"STOP\" : \"AUTO\"}\n            </button>\n          </div>\n\n          {/* BUZZ ZONE */}\n          <div className=\"center-col\">\n            <DisplayFB fb={\"B\"} fbState={buzz} change={buzzChange} />\n            {/* BUZZ CONTROLS */}\n            <div className=\"row\">\n              <button\n                className=\"btn plus-min\"\n                onClick={() => {\n                  fillBoxes(fizz, buzz - 1);\n                  setBuzz(buzz - 1);\n                }}\n              >\n                <FaMinus />\n              </button>\n              <button\n                className=\"btn plus-min\"\n                onClick={() => {\n                  setBuzz(parseInt(buzz) + 1);\n                  fillBoxes(fizz, buzz + 1);\n                }}\n              >\n                <FaPlus />\n              </button>\n            </div>\n          </div>\n        </section>\n      </header>\n\n      {/* THE GRID */}\n      <section className=\"grid\">\n        {boxes.map((box, index) => {\n          return <Box box={box} show={show} key={index} />;\n        })}\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}