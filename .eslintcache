[{"/Users/haven/Desktop/Dev/React/FizzBuzz/fizzBuzzVisualizer/src/App.js":"1","/Users/haven/Desktop/Dev/React/FizzBuzz/fizzBuzzVisualizer/src/Box.js":"2","/Users/haven/Desktop/Dev/React/FizzBuzz/fizzBuzzVisualizer/src/reportWebVitals.js":"3","/Users/haven/Desktop/Dev/React/FizzBuzz/fizzBuzzVisualizer/src/index.js":"4","/Users/haven/Desktop/Dev/React/FizzBuzz/fizzBuzzVisualizer/src/DisplayFB.js":"5"},{"size":4276,"mtime":1610737728000,"results":"6","hashOfConfig":"7"},{"size":145,"mtime":1610690051000,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1610651161000,"results":"9","hashOfConfig":"7"},{"size":500,"mtime":1610651203000,"results":"10","hashOfConfig":"7"},{"size":395,"mtime":1610737713000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"1j7k3ig",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/haven/Desktop/Dev/React/FizzBuzz/fizzBuzzVisualizer/src/App.js",["23"],"import React, { useState, useEffect } from \"react\";\nimport { FaPlus, FaMinus } from \"react-icons/fa\";\nimport \"./App.css\";\nimport Box from \"./Box\";\nimport DisplayFB from \"./DisplayFB\";\n\nfunction App() {\n  // Set a number for Fizz and Buzz. Boxes is our array containing current fizzbuzz values\n  const [fizz, setFizz] = useState(3);\n  const [buzz, setBuzz] = useState(5);\n  const [show, setShow] = useState(false);\n  const [boxes, setBoxes] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // Fill an Array with when to fizz,buzz and/or fizzbuzz\n  const fillBoxes = (f, b) => {\n    let newBoxes = [];\n    for (let i = 1; i <= 100; i++) {\n      if (i % f === 0 && i % b === 0) {\n        newBoxes.push(\"FB\");\n      } else if (i % f === 0) {\n        newBoxes.push(\"F\");\n      } else if (i % b === 0) {\n        newBoxes.push(\"B\");\n      } else {\n        newBoxes.push(i);\n      }\n    }\n    setBoxes(newBoxes);\n  };\n\n  const randomizeFB = () => {\n    let fizzRand = Math.floor(Math.random() * (100 - 2) + 2);\n    let buzzRand = Math.floor(Math.random() * (100 - 2) + 2);\n    fillBoxes(fizzRand, buzzRand);\n    setFizz(fizzRand);\n    setBuzz(buzzRand);\n  };\n\n  const fizzChange = (e) => {\n    fillBoxes(e.target.value, buzz);\n    setFizz(e.target.value);\n  };\n  const buzzChange = (e) => {\n    fillBoxes(fizz, e.target.value);\n    setBuzz(e.target.value);\n  };\n\n  useEffect(() => {\n    if (isPlaying) {\n      const interval = setInterval(() => randomizeFB(), 1000);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n    fillBoxes(fizz, buzz);\n  }, [isPlaying]);\n\n  return (\n    <main className=\"center-col\">\n      <header className=\"center-col\">\n        <h1 className=\"title\">\n          <span className=\"F text\">Fizz</span>\n          <span className=\"B text\">Buzz</span>\n          <span className=\"FB text\">Vizzualizer</span>\n        </h1>\n\n        <section className=\"settings\">\n          {/* FIZZ ZONE */}\n          <div className=\"center-col\">\n            <DisplayFB fb={\"F\"} fbState={fizz} change={fizzChange} />\n            {/* FIZZ CONTROLS */}\n            <div className=\"row\">\n              <button\n                className=\"btn plus-min\"\n                onClick={() => {\n                  fillBoxes(fizz - 1, buzz);\n                  setFizz(fizz - 1);\n                }}\n              >\n                <FaMinus />\n              </button>\n              <button\n                className=\"btn plus-min\"\n                onClick={() => {\n                  setFizz(parseInt(fizz) + 1);\n                  fillBoxes(fizz + 1, buzz);\n                }}\n              >\n                <FaPlus />\n              </button>\n            </div>\n          </div>\n\n          {/* BUTTON ZONE */}\n          <div className=\"btn-container\">\n            <button className=\"btn\" onClick={() => setShow(!show)}>\n              {show ? \"HIDE FB\" : \"SHOW FB\"}\n            </button>\n            <button className=\"btn\" onClick={randomizeFB}>\n              RANDOM\n            </button>\n            <button\n              className={`btn ${!isPlaying || \"autoplay\"}`}\n              onClick={() => setIsPlaying(!isPlaying)}\n            >\n              {isPlaying ? \"STOP\" : \"AUTO\"}\n            </button>\n          </div>\n\n          {/* BUZZ ZONE */}\n          <div className=\"center-col\">\n            <DisplayFB fb={\"B\"} fbState={buzz} change={buzzChange} />\n            {/* BUZZ CONTROLS */}\n            <div className=\"row\">\n              <button\n                className=\"btn plus-min\"\n                onClick={() => {\n                  fillBoxes(fizz, buzz - 1);\n                  setBuzz(buzz - 1);\n                }}\n              >\n                <FaMinus />\n              </button>\n              <button\n                className=\"btn plus-min\"\n                onClick={() => {\n                  setBuzz(parseInt(buzz) + 1);\n                  fillBoxes(fizz, buzz + 1);\n                }}\n              >\n                <FaPlus />\n              </button>\n            </div>\n          </div>\n        </section>\n      </header>\n\n      {/* THE GRID */}\n      <section className=\"grid\">\n        {boxes.map((box, index) => {\n          return <Box box={box} show={show} key={index} />;\n        })}\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","/Users/haven/Desktop/Dev/React/FizzBuzz/fizzBuzzVisualizer/src/Box.js",[],"/Users/haven/Desktop/Dev/React/FizzBuzz/fizzBuzzVisualizer/src/reportWebVitals.js",[],"/Users/haven/Desktop/Dev/React/FizzBuzz/fizzBuzzVisualizer/src/index.js",[],"/Users/haven/Desktop/Dev/React/FizzBuzz/fizzBuzzVisualizer/src/DisplayFB.js",[],{"ruleId":"24","severity":1,"message":"25","line":57,"column":6,"nodeType":"26","endLine":57,"endColumn":17,"suggestions":"27"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'buzz', 'fizz', and 'randomizeFB'. Either include them or remove the dependency array.","ArrayExpression",["28"],{"desc":"29","fix":"30"},"Update the dependencies array to be: [buzz, fizz, isPlaying, randomizeFB]",{"range":"31","text":"32"},[1583,1594],"[buzz, fizz, isPlaying, randomizeFB]"]